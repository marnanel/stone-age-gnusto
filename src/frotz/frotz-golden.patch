diff /usr/src/frotz-2.40/frotz.h ./frotz.h
245c245
< #define LOW_BYTE(addr,v)  { v = zmp[addr]; }
---
> #define LOW_BYTE(addr,v)  { char ZZ[200]; v = zmp[addr]; sprintf(ZZ,"get: %x==%x\n", addr, zmp[addr]); golden_print(ZZ); }
diff /usr/src/frotz-2.40/process.c ./process.c
237a238,253
>  * golden_print
>  * 
>  * Prints text to the trace file
>  *
>  */
> 
> void golden_print(text)
> {
> 	FILE *golden = fopen("golden.log", "a");
> 	fprintf(golden, "%s", text);
> 	fclose(golden);
> }
> 
> /****************************************************************/
> 
> /*
249a266,295
> 
> 	/****************************************************************/
> 	char QQ[200];
> 	int jj;
> 	sprintf(QQ,"pc : %x", pcp-zmp);
> 	golden_print(QQ);
> 
> #ifdef FUNKY_EXTRA_GOLDEN_STUFF
> 
> 	/* If you want very detailed information in the golden file,
> 	   enable this section. Mostly that's not useful, because there
> 	   has to be a way for the interpreter you're testing to generate
> 	   information in just the same format. But if you can get round
> 	   that, it might help in debugging. */
> 
> 	for (jj=0; jj<16; jj++) {
> 	  sprintf(QQ," %x=%x", jj, *(fp - jj));
> 	  golden_print(QQ);
> 	}
> 
> 	if (sp!=stack+STACK_SIZE) {
> 	  sprintf(QQ," s=%x", *sp);
> 	  golden_print(QQ);
> 	}
> #endif /* FUNKY_EXTRA_GOLDEN_STUFF */
> 
> 	sprintf(QQ,"\n");
> 	golden_print(QQ);
> 
> 	/****************************************************************/
