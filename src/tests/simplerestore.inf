! Gnusto tests: simple save/restore test
! Copyright (c) 2003 Thomas Thurman. Distributed under v2 of the GNU GPL.
!
! Note:
!  This file can't be part of the final version of Gnusto, since
!  (obviously) it depends on Inform, and Inform is nonfree, which
!  will keep Gnusto out of the main parts of some distributions
!  (notably Debian). I'm figuring out a solution to this, but for
!  now this file can stay here.
!
! This program accepts an infinite series of keystrokes. It keeps
! a value stored in a variable. If the keystroke is:
!    "."       it will print the contents of the variable
!    "S"       it will save
!    "R"       it will save
!    Otherwise it will set the variable to the keystroke and print it.

Release 177;

! Somewhere to put the results of the @read.
Array readbuffer -> 100;

! Useless place to put the tokenisation results (it'll always fail,
! but we can't tell the machine not to tokenise before z5).
Array tokebuffer -> 100;

! "register" is a global because of an infelicity in the
! design of Quetzal: local variables of the bootstrap function
! (the one first on the call stack) are not saved. This is OK
! for most Z-code programs because the bootstrap function
! traditionally calls something more complicated and then quits,
! but it does mean that the simplest programs, like this one,
! can't expect to keep their locals across a save.
Global register;

[ Main keypress result;

    .top;

    ! The different versions handle their read arrays differently...

#Iftrue (#version_number <= 4);
    @storeb readbuffer 0 0; ! Read at most one byte
    @sread readbuffer tokebuffer;
    @loadb readbuffer 1 -> keypress;
#Ifnot;
    @storeb readbuffer 0 1; ! Read at most one byte
    @storeb readbuffer 1 0; ! No recaps
    @aread readbuffer tokebuffer -> result; ! read; we ignore result
    @loadb readbuffer 2 -> keypress;
#Endif;
    
    @je keypress  46 ?do_fullstop; ! .
    @je keypress 115 ?do_save;     ! s
    @je keypress 114 ?do_restore;  ! r
    @je keypress 117 ?do_undo;     ! u
    
    @add keypress 0 -> register;
    @print_char register;
    @print_char 32;
    
    @je 0 0 ?top;

    .do_fullstop;
    @print_char register;
    @print_char 32;
    @je 0 0 ?top;

    .do_save;
#Iftrue (#version_number <= 3);
    @save ?top; ! jump if successful
    @je 0 0 ?fail;
#Ifnot;
    @save -> result;
#Endif;
    @je result 0 ?fail;
    @je 0 0 ?top;
    
    .do_restore;
#Iftrue (#version_number <= 3);
    @restore ?top; ! but the branch is never made :)
    @je 0 0 ?fail;
#Ifnot;
    @restore -> result;
#Endif;
    @je 0 0 ?fail;

    .do_undo;
    @print "(undo test not implemented)";
    @je 0 0 ?top;

    .fail;
    @print_ret "^^*FAIL Unexpected error: quitting";
];

